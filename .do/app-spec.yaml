# DigitalOcean App Platform Spec
# This spec deploys the Athletics Dashboard using Docker

name: athletics-dashboard
region: nyc

# Services
services:
  - name: web
    # Option 1: Build from Dockerfile in GitHub repo
    github:
      repo: your-org/athletics-dashboard
      branch: main
      deploy_on_push: true

    # Option 2: Use pre-built image from Container Registry
    # Uncomment this and comment out 'github' above to use a pre-built image
    # image:
    #   registry_type: DOCR  # or DOCKER_HUB, GHCR
    #   repository: athletics-dashboard
    #   tag: latest

    dockerfile_path: Dockerfile
    run_command: yarn start

    # Resource allocation
    instance_count: 1
    instance_size_slug: professional-s # 2GB RAM, 1 vCPU
    # instance_size_slug: professional-m  # 4GB RAM, 2 vCPU (recommended)
    # instance_size_slug: professional-l  # 8GB RAM, 4 vCPU

    # Port configuration
    http_port: 3000

    # Routing
    routes:
      - path: /

    # Health check
    health_check:
      http_path: /api/health
      initial_delay_seconds: 60
      period_seconds: 10
      timeout_seconds: 5
      success_threshold: 1
      failure_threshold: 3

    # Auto-deploy on push
    source_dir: /

    # Environment variables
    envs:
      # Node environment
      - key: NODE_ENV
        value: production
        scope: RUN_TIME

      # NextAuth (required)
      - key: NEXTAUTH_URL
        value: ${APP_URL} # App Platform provides this automatically
        scope: RUN_TIME

      - key: NEXTAUTH_SECRET
        value: ${NEXTAUTH_SECRET}
        type: SECRET
        scope: RUN_TIME

      # Database (from managed database component below)
      - key: DATABASE_URL
        value: ${db.DATABASE_URL}?connection_limit=20&pool_timeout=10
        type: SECRET
        scope: RUN_AND_BUILD_TIME

      # Google OAuth & Calendar
      - key: GOOGLE_CALENDAR_CLIENT_ID
        value: ${GOOGLE_CALENDAR_CLIENT_ID}
        type: SECRET
        scope: RUN_TIME

      - key: GOOGLE_CALENDAR_CLIENT_SECRET
        value: ${GOOGLE_CALENDAR_CLIENT_SECRET}
        type: SECRET
        scope: RUN_TIME

      - key: GOOGLE_MAPS_API_KEY
        value: ${GOOGLE_MAPS_API_KEY}
        type: SECRET
        scope: RUN_TIME

      # Email service (Resend)
      - key: RESEND_API_KEY
        value: ${RESEND_API_KEY}
        type: SECRET
        scope: RUN_TIME

      - key: EMAIL_FROM
        value: "AD Hub <noreply@yourdomain.com>"
        scope: RUN_TIME

      # OpenAI
      - key: OPENAI_API_KEY
        value: ${OPENAI_API_KEY}
        type: SECRET
        scope: RUN_TIME

      # Weather API
      - key: OPENWEATHER_API_KEY
        value: ${OPENWEATHER_API_KEY}
        type: SECRET
        scope: RUN_TIME

      # Stripe (if using)
      - key: STRIPE_SECRET_KEY
        value: ${STRIPE_SECRET_KEY}
        type: SECRET
        scope: RUN_TIME

      - key: STRIPE_WEBHOOK_SECRET
        value: ${STRIPE_WEBHOOK_SECRET}
        type: SECRET
        scope: RUN_TIME

# Database
databases:
  - name: db
    engine: PG
    version: "15"
    production: true
    cluster_name: athletics-db-cluster
    db_name: athleticsdb
    db_user: athleticsdb

# Jobs
jobs:
  - name: db-migrate
    kind: PRE_DEPLOY
    github:
      repo: your-org/athletics-dashboard
      branch: main
    dockerfile_path: Dockerfile.migrate
    instance_size_slug: basic-xxs
    envs:
      - key: DATABASE_URL
        value: ${db.DATABASE_URL}?connection_limit=20&pool_timeout=10
        type: SECRET
        scope: RUN_TIME
      - key: NODE_ENV
        value: production
        scope: RUN_TIME

# Alerts (optional)
alerts:
  - rule: DEPLOYMENT_FAILED
  - rule: DOMAIN_FAILED
  - rule: CPU_UTILIZATION
    value: 80
  - rule: MEM_UTILIZATION
    value: 80

# Features
features:
  - buildpack-stack=ubuntu-22
